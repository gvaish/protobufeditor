// Generated by the protocol buffer compiler.  DO NOT EDIT!

package sales;

public final class Sales {
  private Sales() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class sale extends
      com.google.protobuf.GeneratedMessage {
    // Use sale.newBuilder() to construct.
    private sale() {}
    
    private static final sale defaultInstance = new sale();
    public static sale getDefaultInstance() {
      return defaultInstance;
    }
    
    public sale getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return sales.Sales.internal_static_sales_sale_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return sales.Sales.internal_static_sales_sale_fieldAccessorTable;
    }
    
    // required int32 keycode = 1;
    public static final int KEYCODE_FIELD_NUMBER = 1;
    private boolean hasKeycode;
    private int keycode_ = 0;
    public boolean hasKeycode() { return hasKeycode; }
    public int getKeycode() { return keycode_; }
    
    // required int32 store = 2;
    public static final int STORE_FIELD_NUMBER = 2;
    private boolean hasStore;
    private int store_ = 0;
    public boolean hasStore() { return hasStore; }
    public int getStore() { return store_; }
    
    // required int32 department = 3;
    public static final int DEPARTMENT_FIELD_NUMBER = 3;
    private boolean hasDepartment;
    private int department_ = 0;
    public boolean hasDepartment() { return hasDepartment; }
    public int getDepartment() { return department_; }
    
    // required int32 saleDate = 4;
    public static final int SALEDATE_FIELD_NUMBER = 4;
    private boolean hasSaleDate;
    private int saleDate_ = 0;
    public boolean hasSaleDate() { return hasSaleDate; }
    public int getSaleDate() { return saleDate_; }
    
    // required int32 quantity = 5;
    public static final int QUANTITY_FIELD_NUMBER = 5;
    private boolean hasQuantity;
    private int quantity_ = 0;
    public boolean hasQuantity() { return hasQuantity; }
    public int getQuantity() { return quantity_; }
    
    // required int64 price = 6;
    public static final int PRICE_FIELD_NUMBER = 6;
    private boolean hasPrice;
    private long price_ = 0L;
    public boolean hasPrice() { return hasPrice; }
    public long getPrice() { return price_; }
    
    public final boolean isInitialized() {
      if (!hasKeycode) return false;
      if (!hasStore) return false;
      if (!hasDepartment) return false;
      if (!hasSaleDate) return false;
      if (!hasQuantity) return false;
      if (!hasPrice) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasKeycode()) {
        output.writeInt32(1, getKeycode());
      }
      if (hasStore()) {
        output.writeInt32(2, getStore());
      }
      if (hasDepartment()) {
        output.writeInt32(3, getDepartment());
      }
      if (hasSaleDate()) {
        output.writeInt32(4, getSaleDate());
      }
      if (hasQuantity()) {
        output.writeInt32(5, getQuantity());
      }
      if (hasPrice()) {
        output.writeInt64(6, getPrice());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasKeycode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getKeycode());
      }
      if (hasStore()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getStore());
      }
      if (hasDepartment()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getDepartment());
      }
      if (hasSaleDate()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getSaleDate());
      }
      if (hasQuantity()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getQuantity());
      }
      if (hasPrice()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, getPrice());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static sales.Sales.sale parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static sales.Sales.sale parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static sales.Sales.sale parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static sales.Sales.sale parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static sales.Sales.sale parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static sales.Sales.sale parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static sales.Sales.sale parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static sales.Sales.sale parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static sales.Sales.sale parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static sales.Sales.sale parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(sales.Sales.sale prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private sales.Sales.sale result;
      
      // Construct using sales.Sales.sale.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new sales.Sales.sale();
        return builder;
      }
      
      protected sales.Sales.sale internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new sales.Sales.sale();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return sales.Sales.sale.getDescriptor();
      }
      
      public sales.Sales.sale getDefaultInstanceForType() {
        return sales.Sales.sale.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public sales.Sales.sale build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private sales.Sales.sale buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public sales.Sales.sale buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        sales.Sales.sale returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof sales.Sales.sale) {
          return mergeFrom((sales.Sales.sale)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(sales.Sales.sale other) {
        if (other == sales.Sales.sale.getDefaultInstance()) return this;
        if (other.hasKeycode()) {
          setKeycode(other.getKeycode());
        }
        if (other.hasStore()) {
          setStore(other.getStore());
        }
        if (other.hasDepartment()) {
          setDepartment(other.getDepartment());
        }
        if (other.hasSaleDate()) {
          setSaleDate(other.getSaleDate());
        }
        if (other.hasQuantity()) {
          setQuantity(other.getQuantity());
        }
        if (other.hasPrice()) {
          setPrice(other.getPrice());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setKeycode(input.readInt32());
              break;
            }
            case 16: {
              setStore(input.readInt32());
              break;
            }
            case 24: {
              setDepartment(input.readInt32());
              break;
            }
            case 32: {
              setSaleDate(input.readInt32());
              break;
            }
            case 40: {
              setQuantity(input.readInt32());
              break;
            }
            case 48: {
              setPrice(input.readInt64());
              break;
            }
          }
        }
      }
      
      
      // required int32 keycode = 1;
      public boolean hasKeycode() {
        return result.hasKeycode();
      }
      public int getKeycode() {
        return result.getKeycode();
      }
      public Builder setKeycode(int value) {
        result.hasKeycode = true;
        result.keycode_ = value;
        return this;
      }
      public Builder clearKeycode() {
        result.hasKeycode = false;
        result.keycode_ = 0;
        return this;
      }
      
      // required int32 store = 2;
      public boolean hasStore() {
        return result.hasStore();
      }
      public int getStore() {
        return result.getStore();
      }
      public Builder setStore(int value) {
        result.hasStore = true;
        result.store_ = value;
        return this;
      }
      public Builder clearStore() {
        result.hasStore = false;
        result.store_ = 0;
        return this;
      }
      
      // required int32 department = 3;
      public boolean hasDepartment() {
        return result.hasDepartment();
      }
      public int getDepartment() {
        return result.getDepartment();
      }
      public Builder setDepartment(int value) {
        result.hasDepartment = true;
        result.department_ = value;
        return this;
      }
      public Builder clearDepartment() {
        result.hasDepartment = false;
        result.department_ = 0;
        return this;
      }
      
      // required int32 saleDate = 4;
      public boolean hasSaleDate() {
        return result.hasSaleDate();
      }
      public int getSaleDate() {
        return result.getSaleDate();
      }
      public Builder setSaleDate(int value) {
        result.hasSaleDate = true;
        result.saleDate_ = value;
        return this;
      }
      public Builder clearSaleDate() {
        result.hasSaleDate = false;
        result.saleDate_ = 0;
        return this;
      }
      
      // required int32 quantity = 5;
      public boolean hasQuantity() {
        return result.hasQuantity();
      }
      public int getQuantity() {
        return result.getQuantity();
      }
      public Builder setQuantity(int value) {
        result.hasQuantity = true;
        result.quantity_ = value;
        return this;
      }
      public Builder clearQuantity() {
        result.hasQuantity = false;
        result.quantity_ = 0;
        return this;
      }
      
      // required int64 price = 6;
      public boolean hasPrice() {
        return result.hasPrice();
      }
      public long getPrice() {
        return result.getPrice();
      }
      public Builder setPrice(long value) {
        result.hasPrice = true;
        result.price_ = value;
        return this;
      }
      public Builder clearPrice() {
        result.hasPrice = false;
        result.price_ = 0L;
        return this;
      }
    }
    
    static {
      sales.Sales.getDescriptor();
    }
    
    static {
      sales.Sales.internalForceInit();
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_sales_sale_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_sales_sale_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013sales.proto\022\005sales\"m\n\004sale\022\017\n\007keycode\030" +
      "\001 \002(\005\022\r\n\005store\030\002 \002(\005\022\022\n\ndepartment\030\003 \002(\005" +
      "\022\020\n\010saleDate\030\004 \002(\005\022\020\n\010quantity\030\005 \002(\005\022\r\n\005" +
      "price\030\006 \002(\003B\002H\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_sales_sale_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_sales_sale_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_sales_sale_descriptor,
              new java.lang.String[] { "Keycode", "Store", "Department", "SaleDate", "Quantity", "Price", },
              sales.Sales.sale.class,
              sales.Sales.sale.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
}
