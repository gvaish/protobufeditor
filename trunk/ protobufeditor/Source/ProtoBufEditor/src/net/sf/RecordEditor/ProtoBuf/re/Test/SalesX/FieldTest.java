// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FieldTest.proto

package net.sf.RecordEditor.ProtoBuf.re.Test.SalesX;

public final class FieldTest {
  private FieldTest() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum SaleType
      implements com.google.protobuf.ProtocolMessageEnum {
    RETURN(0, -1),
    OTHER(1, 0),
    SALE(2, 1),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static SaleType valueOf(int value) {
      switch (value) {
        case -1: return RETURN;
        case 0: return OTHER;
        case 1: return SALE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<SaleType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SaleType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SaleType>() {
            public SaleType findValueByNumber(int number) {
              return SaleType.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final SaleType[] VALUES = {
      RETURN, OTHER, SALE, 
    };
    public static SaleType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private SaleType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.SaleType)
  }
  
  public static final class TestFields extends
      com.google.protobuf.GeneratedMessage {
    // Use TestFields.newBuilder() to construct.
    private TestFields() {
      initFields();
    }
    private TestFields(boolean noInit) {}
    
    private static final TestFields defaultInstance;
    public static TestFields getDefaultInstance() {
      return defaultInstance;
    }
    
    public TestFields getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_TestFields_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_TestFields_fieldAccessorTable;
    }
    
    // required int32 f01 = 1;
    public static final int F01_FIELD_NUMBER = 1;
    private boolean hasF01;
    private int f01_ = 0;
    public boolean hasF01() { return hasF01; }
    public int getF01() { return f01_; }
    
    // required sint32 f02 = 2;
    public static final int F02_FIELD_NUMBER = 2;
    private boolean hasF02;
    private int f02_ = 0;
    public boolean hasF02() { return hasF02; }
    public int getF02() { return f02_; }
    
    // required sfixed32 f03 = 3;
    public static final int F03_FIELD_NUMBER = 3;
    private boolean hasF03;
    private int f03_ = 0;
    public boolean hasF03() { return hasF03; }
    public int getF03() { return f03_; }
    
    // required uint32 f04 = 4;
    public static final int F04_FIELD_NUMBER = 4;
    private boolean hasF04;
    private int f04_ = 0;
    public boolean hasF04() { return hasF04; }
    public int getF04() { return f04_; }
    
    // required fixed32 f05 = 5;
    public static final int F05_FIELD_NUMBER = 5;
    private boolean hasF05;
    private int f05_ = 0;
    public boolean hasF05() { return hasF05; }
    public int getF05() { return f05_; }
    
    // required int64 f06 = 6;
    public static final int F06_FIELD_NUMBER = 6;
    private boolean hasF06;
    private long f06_ = 0L;
    public boolean hasF06() { return hasF06; }
    public long getF06() { return f06_; }
    
    // required sint64 f07 = 7;
    public static final int F07_FIELD_NUMBER = 7;
    private boolean hasF07;
    private long f07_ = 0L;
    public boolean hasF07() { return hasF07; }
    public long getF07() { return f07_; }
    
    // required sfixed64 f08 = 8;
    public static final int F08_FIELD_NUMBER = 8;
    private boolean hasF08;
    private long f08_ = 0L;
    public boolean hasF08() { return hasF08; }
    public long getF08() { return f08_; }
    
    // required uint64 f09 = 9;
    public static final int F09_FIELD_NUMBER = 9;
    private boolean hasF09;
    private long f09_ = 0L;
    public boolean hasF09() { return hasF09; }
    public long getF09() { return f09_; }
    
    // required fixed64 f10 = 10;
    public static final int F10_FIELD_NUMBER = 10;
    private boolean hasF10;
    private long f10_ = 0L;
    public boolean hasF10() { return hasF10; }
    public long getF10() { return f10_; }
    
    // required float f11 = 11;
    public static final int F11_FIELD_NUMBER = 11;
    private boolean hasF11;
    private float f11_ = 0F;
    public boolean hasF11() { return hasF11; }
    public float getF11() { return f11_; }
    
    // required double f12 = 12;
    public static final int F12_FIELD_NUMBER = 12;
    private boolean hasF12;
    private double f12_ = 0D;
    public boolean hasF12() { return hasF12; }
    public double getF12() { return f12_; }
    
    // required bool f13 = 13;
    public static final int F13_FIELD_NUMBER = 13;
    private boolean hasF13;
    private boolean f13_ = false;
    public boolean hasF13() { return hasF13; }
    public boolean getF13() { return f13_; }
    
    // optional bool f14 = 14;
    public static final int F14_FIELD_NUMBER = 14;
    private boolean hasF14;
    private boolean f14_ = false;
    public boolean hasF14() { return hasF14; }
    public boolean getF14() { return f14_; }
    
    // required string f15 = 15;
    public static final int F15_FIELD_NUMBER = 15;
    private boolean hasF15;
    private java.lang.String f15_ = "";
    public boolean hasF15() { return hasF15; }
    public java.lang.String getF15() { return f15_; }
    
    // optional string f16 = 16;
    public static final int F16_FIELD_NUMBER = 16;
    private boolean hasF16;
    private java.lang.String f16_ = "";
    public boolean hasF16() { return hasF16; }
    public java.lang.String getF16() { return f16_; }
    
    // required .net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.SaleType f17 = 17;
    public static final int F17_FIELD_NUMBER = 17;
    private boolean hasF17;
    private net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType f17_;
    public boolean hasF17() { return hasF17; }
    public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType getF17() { return f17_; }
    
    // optional .net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.SaleType f18 = 18;
    public static final int F18_FIELD_NUMBER = 18;
    private boolean hasF18;
    private net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType f18_;
    public boolean hasF18() { return hasF18; }
    public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType getF18() { return f18_; }
    
    // required bytes f19 = 19;
    public static final int F19_FIELD_NUMBER = 19;
    private boolean hasF19;
    private com.google.protobuf.ByteString f19_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasF19() { return hasF19; }
    public com.google.protobuf.ByteString getF19() { return f19_; }
    
    // optional bytes f20 = 20;
    public static final int F20_FIELD_NUMBER = 20;
    private boolean hasF20;
    private com.google.protobuf.ByteString f20_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasF20() { return hasF20; }
    public com.google.protobuf.ByteString getF20() { return f20_; }
    
    private void initFields() {
      f17_ = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType.RETURN;
      f18_ = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType.RETURN;
    }
    public final boolean isInitialized() {
      if (!hasF01) return false;
      if (!hasF02) return false;
      if (!hasF03) return false;
      if (!hasF04) return false;
      if (!hasF05) return false;
      if (!hasF06) return false;
      if (!hasF07) return false;
      if (!hasF08) return false;
      if (!hasF09) return false;
      if (!hasF10) return false;
      if (!hasF11) return false;
      if (!hasF12) return false;
      if (!hasF13) return false;
      if (!hasF15) return false;
      if (!hasF17) return false;
      if (!hasF19) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasF01()) {
        output.writeInt32(1, getF01());
      }
      if (hasF02()) {
        output.writeSInt32(2, getF02());
      }
      if (hasF03()) {
        output.writeSFixed32(3, getF03());
      }
      if (hasF04()) {
        output.writeUInt32(4, getF04());
      }
      if (hasF05()) {
        output.writeFixed32(5, getF05());
      }
      if (hasF06()) {
        output.writeInt64(6, getF06());
      }
      if (hasF07()) {
        output.writeSInt64(7, getF07());
      }
      if (hasF08()) {
        output.writeSFixed64(8, getF08());
      }
      if (hasF09()) {
        output.writeUInt64(9, getF09());
      }
      if (hasF10()) {
        output.writeFixed64(10, getF10());
      }
      if (hasF11()) {
        output.writeFloat(11, getF11());
      }
      if (hasF12()) {
        output.writeDouble(12, getF12());
      }
      if (hasF13()) {
        output.writeBool(13, getF13());
      }
      if (hasF14()) {
        output.writeBool(14, getF14());
      }
      if (hasF15()) {
        output.writeString(15, getF15());
      }
      if (hasF16()) {
        output.writeString(16, getF16());
      }
      if (hasF17()) {
        output.writeEnum(17, getF17().getNumber());
      }
      if (hasF18()) {
        output.writeEnum(18, getF18().getNumber());
      }
      if (hasF19()) {
        output.writeBytes(19, getF19());
      }
      if (hasF20()) {
        output.writeBytes(20, getF20());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasF01()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getF01());
      }
      if (hasF02()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, getF02());
      }
      if (hasF03()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(3, getF03());
      }
      if (hasF04()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getF04());
      }
      if (hasF05()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(5, getF05());
      }
      if (hasF06()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, getF06());
      }
      if (hasF07()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(7, getF07());
      }
      if (hasF08()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(8, getF08());
      }
      if (hasF09()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, getF09());
      }
      if (hasF10()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(10, getF10());
      }
      if (hasF11()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, getF11());
      }
      if (hasF12()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, getF12());
      }
      if (hasF13()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, getF13());
      }
      if (hasF14()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, getF14());
      }
      if (hasF15()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(15, getF15());
      }
      if (hasF16()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(16, getF16());
      }
      if (hasF17()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(17, getF17().getNumber());
      }
      if (hasF18()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(18, getF18().getNumber());
      }
      if (hasF19()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(19, getF19());
      }
      if (hasF20()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(20, getF20());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields result;
      
      // Construct using net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields();
        return builder;
      }
      
      protected net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields.getDescriptor();
      }
      
      public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields getDefaultInstanceForType() {
        return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields) {
          return mergeFrom((net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields other) {
        if (other == net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields.getDefaultInstance()) return this;
        if (other.hasF01()) {
          setF01(other.getF01());
        }
        if (other.hasF02()) {
          setF02(other.getF02());
        }
        if (other.hasF03()) {
          setF03(other.getF03());
        }
        if (other.hasF04()) {
          setF04(other.getF04());
        }
        if (other.hasF05()) {
          setF05(other.getF05());
        }
        if (other.hasF06()) {
          setF06(other.getF06());
        }
        if (other.hasF07()) {
          setF07(other.getF07());
        }
        if (other.hasF08()) {
          setF08(other.getF08());
        }
        if (other.hasF09()) {
          setF09(other.getF09());
        }
        if (other.hasF10()) {
          setF10(other.getF10());
        }
        if (other.hasF11()) {
          setF11(other.getF11());
        }
        if (other.hasF12()) {
          setF12(other.getF12());
        }
        if (other.hasF13()) {
          setF13(other.getF13());
        }
        if (other.hasF14()) {
          setF14(other.getF14());
        }
        if (other.hasF15()) {
          setF15(other.getF15());
        }
        if (other.hasF16()) {
          setF16(other.getF16());
        }
        if (other.hasF17()) {
          setF17(other.getF17());
        }
        if (other.hasF18()) {
          setF18(other.getF18());
        }
        if (other.hasF19()) {
          setF19(other.getF19());
        }
        if (other.hasF20()) {
          setF20(other.getF20());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setF01(input.readInt32());
              break;
            }
            case 16: {
              setF02(input.readSInt32());
              break;
            }
            case 29: {
              setF03(input.readSFixed32());
              break;
            }
            case 32: {
              setF04(input.readUInt32());
              break;
            }
            case 45: {
              setF05(input.readFixed32());
              break;
            }
            case 48: {
              setF06(input.readInt64());
              break;
            }
            case 56: {
              setF07(input.readSInt64());
              break;
            }
            case 65: {
              setF08(input.readSFixed64());
              break;
            }
            case 72: {
              setF09(input.readUInt64());
              break;
            }
            case 81: {
              setF10(input.readFixed64());
              break;
            }
            case 93: {
              setF11(input.readFloat());
              break;
            }
            case 97: {
              setF12(input.readDouble());
              break;
            }
            case 104: {
              setF13(input.readBool());
              break;
            }
            case 112: {
              setF14(input.readBool());
              break;
            }
            case 122: {
              setF15(input.readString());
              break;
            }
            case 130: {
              setF16(input.readString());
              break;
            }
            case 136: {
              int rawValue = input.readEnum();
              net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType value = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(17, rawValue);
              } else {
                setF17(value);
              }
              break;
            }
            case 144: {
              int rawValue = input.readEnum();
              net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType value = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(18, rawValue);
              } else {
                setF18(value);
              }
              break;
            }
            case 154: {
              setF19(input.readBytes());
              break;
            }
            case 162: {
              setF20(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required int32 f01 = 1;
      public boolean hasF01() {
        return result.hasF01();
      }
      public int getF01() {
        return result.getF01();
      }
      public Builder setF01(int value) {
        result.hasF01 = true;
        result.f01_ = value;
        return this;
      }
      public Builder clearF01() {
        result.hasF01 = false;
        result.f01_ = 0;
        return this;
      }
      
      // required sint32 f02 = 2;
      public boolean hasF02() {
        return result.hasF02();
      }
      public int getF02() {
        return result.getF02();
      }
      public Builder setF02(int value) {
        result.hasF02 = true;
        result.f02_ = value;
        return this;
      }
      public Builder clearF02() {
        result.hasF02 = false;
        result.f02_ = 0;
        return this;
      }
      
      // required sfixed32 f03 = 3;
      public boolean hasF03() {
        return result.hasF03();
      }
      public int getF03() {
        return result.getF03();
      }
      public Builder setF03(int value) {
        result.hasF03 = true;
        result.f03_ = value;
        return this;
      }
      public Builder clearF03() {
        result.hasF03 = false;
        result.f03_ = 0;
        return this;
      }
      
      // required uint32 f04 = 4;
      public boolean hasF04() {
        return result.hasF04();
      }
      public int getF04() {
        return result.getF04();
      }
      public Builder setF04(int value) {
        result.hasF04 = true;
        result.f04_ = value;
        return this;
      }
      public Builder clearF04() {
        result.hasF04 = false;
        result.f04_ = 0;
        return this;
      }
      
      // required fixed32 f05 = 5;
      public boolean hasF05() {
        return result.hasF05();
      }
      public int getF05() {
        return result.getF05();
      }
      public Builder setF05(int value) {
        result.hasF05 = true;
        result.f05_ = value;
        return this;
      }
      public Builder clearF05() {
        result.hasF05 = false;
        result.f05_ = 0;
        return this;
      }
      
      // required int64 f06 = 6;
      public boolean hasF06() {
        return result.hasF06();
      }
      public long getF06() {
        return result.getF06();
      }
      public Builder setF06(long value) {
        result.hasF06 = true;
        result.f06_ = value;
        return this;
      }
      public Builder clearF06() {
        result.hasF06 = false;
        result.f06_ = 0L;
        return this;
      }
      
      // required sint64 f07 = 7;
      public boolean hasF07() {
        return result.hasF07();
      }
      public long getF07() {
        return result.getF07();
      }
      public Builder setF07(long value) {
        result.hasF07 = true;
        result.f07_ = value;
        return this;
      }
      public Builder clearF07() {
        result.hasF07 = false;
        result.f07_ = 0L;
        return this;
      }
      
      // required sfixed64 f08 = 8;
      public boolean hasF08() {
        return result.hasF08();
      }
      public long getF08() {
        return result.getF08();
      }
      public Builder setF08(long value) {
        result.hasF08 = true;
        result.f08_ = value;
        return this;
      }
      public Builder clearF08() {
        result.hasF08 = false;
        result.f08_ = 0L;
        return this;
      }
      
      // required uint64 f09 = 9;
      public boolean hasF09() {
        return result.hasF09();
      }
      public long getF09() {
        return result.getF09();
      }
      public Builder setF09(long value) {
        result.hasF09 = true;
        result.f09_ = value;
        return this;
      }
      public Builder clearF09() {
        result.hasF09 = false;
        result.f09_ = 0L;
        return this;
      }
      
      // required fixed64 f10 = 10;
      public boolean hasF10() {
        return result.hasF10();
      }
      public long getF10() {
        return result.getF10();
      }
      public Builder setF10(long value) {
        result.hasF10 = true;
        result.f10_ = value;
        return this;
      }
      public Builder clearF10() {
        result.hasF10 = false;
        result.f10_ = 0L;
        return this;
      }
      
      // required float f11 = 11;
      public boolean hasF11() {
        return result.hasF11();
      }
      public float getF11() {
        return result.getF11();
      }
      public Builder setF11(float value) {
        result.hasF11 = true;
        result.f11_ = value;
        return this;
      }
      public Builder clearF11() {
        result.hasF11 = false;
        result.f11_ = 0F;
        return this;
      }
      
      // required double f12 = 12;
      public boolean hasF12() {
        return result.hasF12();
      }
      public double getF12() {
        return result.getF12();
      }
      public Builder setF12(double value) {
        result.hasF12 = true;
        result.f12_ = value;
        return this;
      }
      public Builder clearF12() {
        result.hasF12 = false;
        result.f12_ = 0D;
        return this;
      }
      
      // required bool f13 = 13;
      public boolean hasF13() {
        return result.hasF13();
      }
      public boolean getF13() {
        return result.getF13();
      }
      public Builder setF13(boolean value) {
        result.hasF13 = true;
        result.f13_ = value;
        return this;
      }
      public Builder clearF13() {
        result.hasF13 = false;
        result.f13_ = false;
        return this;
      }
      
      // optional bool f14 = 14;
      public boolean hasF14() {
        return result.hasF14();
      }
      public boolean getF14() {
        return result.getF14();
      }
      public Builder setF14(boolean value) {
        result.hasF14 = true;
        result.f14_ = value;
        return this;
      }
      public Builder clearF14() {
        result.hasF14 = false;
        result.f14_ = false;
        return this;
      }
      
      // required string f15 = 15;
      public boolean hasF15() {
        return result.hasF15();
      }
      public java.lang.String getF15() {
        return result.getF15();
      }
      public Builder setF15(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasF15 = true;
        result.f15_ = value;
        return this;
      }
      public Builder clearF15() {
        result.hasF15 = false;
        result.f15_ = getDefaultInstance().getF15();
        return this;
      }
      
      // optional string f16 = 16;
      public boolean hasF16() {
        return result.hasF16();
      }
      public java.lang.String getF16() {
        return result.getF16();
      }
      public Builder setF16(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasF16 = true;
        result.f16_ = value;
        return this;
      }
      public Builder clearF16() {
        result.hasF16 = false;
        result.f16_ = getDefaultInstance().getF16();
        return this;
      }
      
      // required .net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.SaleType f17 = 17;
      public boolean hasF17() {
        return result.hasF17();
      }
      public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType getF17() {
        return result.getF17();
      }
      public Builder setF17(net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasF17 = true;
        result.f17_ = value;
        return this;
      }
      public Builder clearF17() {
        result.hasF17 = false;
        result.f17_ = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType.RETURN;
        return this;
      }
      
      // optional .net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.SaleType f18 = 18;
      public boolean hasF18() {
        return result.hasF18();
      }
      public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType getF18() {
        return result.getF18();
      }
      public Builder setF18(net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasF18 = true;
        result.f18_ = value;
        return this;
      }
      public Builder clearF18() {
        result.hasF18 = false;
        result.f18_ = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType.RETURN;
        return this;
      }
      
      // required bytes f19 = 19;
      public boolean hasF19() {
        return result.hasF19();
      }
      public com.google.protobuf.ByteString getF19() {
        return result.getF19();
      }
      public Builder setF19(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasF19 = true;
        result.f19_ = value;
        return this;
      }
      public Builder clearF19() {
        result.hasF19 = false;
        result.f19_ = getDefaultInstance().getF19();
        return this;
      }
      
      // optional bytes f20 = 20;
      public boolean hasF20() {
        return result.hasF20();
      }
      public com.google.protobuf.ByteString getF20() {
        return result.getF20();
      }
      public Builder setF20(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasF20 = true;
        result.f20_ = value;
        return this;
      }
      public Builder clearF20() {
        result.hasF20 = false;
        result.f20_ = getDefaultInstance().getF20();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.TestFields)
    }
    
    static {
      defaultInstance = new TestFields(true);
      net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.TestFields)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_TestFields_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_TestFields_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017FieldTest.proto\022+net.sf.RecordEditor.P" +
      "rotoBuf.re.Test.SalesX\"\376\002\n\nTestFields\022\013\n" +
      "\003f01\030\001 \002(\005\022\013\n\003f02\030\002 \002(\021\022\013\n\003f03\030\003 \002(\017\022\013\n\003" +
      "f04\030\004 \002(\r\022\013\n\003f05\030\005 \002(\007\022\013\n\003f06\030\006 \002(\003\022\013\n\003f" +
      "07\030\007 \002(\022\022\013\n\003f08\030\010 \002(\020\022\013\n\003f09\030\t \002(\004\022\013\n\003f1" +
      "0\030\n \002(\006\022\013\n\003f11\030\013 \002(\002\022\013\n\003f12\030\014 \002(\001\022\013\n\003f13" +
      "\030\r \002(\010\022\013\n\003f14\030\016 \001(\010\022\013\n\003f15\030\017 \002(\t\022\013\n\003f16\030" +
      "\020 \001(\t\022B\n\003f17\030\021 \002(\01625.net.sf.RecordEditor" +
      ".ProtoBuf.re.Test.SalesX.SaleType\022B\n\003f18" +
      "\030\022 \001(\01625.net.sf.RecordEditor.ProtoBuf.re",
      ".Test.SalesX.SaleType\022\013\n\003f19\030\023 \002(\014\022\013\n\003f2" +
      "0\030\024 \001(\014*4\n\010SaleType\022\023\n\006RETURN\020\377\377\377\377\377\377\377\377\377\001" +
      "\022\t\n\005OTHER\020\000\022\010\n\004SALE\020\001B\002H\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_TestFields_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_TestFields_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_TestFields_descriptor,
              new java.lang.String[] { "F01", "F02", "F03", "F04", "F05", "F06", "F07", "F08", "F09", "F10", "F11", "F12", "F13", "F14", "F15", "F16", "F17", "F18", "F19", "F20", },
              net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields.class,
              net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
