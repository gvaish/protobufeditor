// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FieldTest.proto

package net.sf.RecordEditor.ProtoBuf.re.Test.SalesX;

public final class FieldTest {
  private FieldTest() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum SaleType
      implements com.google.protobuf.ProtocolMessageEnum {
    RETURN(0, -1),
    OTHER(1, 0),
    SALE(2, 1),
    ;
    
    public static final int RETURN_VALUE = -1;
    public static final int OTHER_VALUE = 0;
    public static final int SALE_VALUE = 1;
    
    
    public final int getNumber() { return value; }
    
    public static SaleType valueOf(int value) {
      switch (value) {
        case -1: return RETURN;
        case 0: return OTHER;
        case 1: return SALE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<SaleType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SaleType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SaleType>() {
            public SaleType findValueByNumber(int number) {
              return SaleType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final SaleType[] VALUES = {
      RETURN, OTHER, SALE, 
    };
    
    public static SaleType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private SaleType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.SaleType)
  }
  
  public interface TestFieldsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 f01 = 1;
    boolean hasF01();
    int getF01();
    
    // required sint32 f02 = 2;
    boolean hasF02();
    int getF02();
    
    // required sfixed32 f03 = 3;
    boolean hasF03();
    int getF03();
    
    // required uint32 f04 = 4;
    boolean hasF04();
    int getF04();
    
    // required fixed32 f05 = 5;
    boolean hasF05();
    int getF05();
    
    // required int64 f06 = 6;
    boolean hasF06();
    long getF06();
    
    // required sint64 f07 = 7;
    boolean hasF07();
    long getF07();
    
    // required sfixed64 f08 = 8;
    boolean hasF08();
    long getF08();
    
    // required uint64 f09 = 9;
    boolean hasF09();
    long getF09();
    
    // required fixed64 f10 = 10;
    boolean hasF10();
    long getF10();
    
    // required float f11 = 11;
    boolean hasF11();
    float getF11();
    
    // required double f12 = 12;
    boolean hasF12();
    double getF12();
    
    // required bool f13 = 13;
    boolean hasF13();
    boolean getF13();
    
    // optional bool f14 = 14;
    boolean hasF14();
    boolean getF14();
    
    // required string f15 = 15;
    boolean hasF15();
    String getF15();
    
    // optional string f16 = 16;
    boolean hasF16();
    String getF16();
    
    // required .net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.SaleType f17 = 17;
    boolean hasF17();
    net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType getF17();
    
    // optional .net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.SaleType f18 = 18;
    boolean hasF18();
    net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType getF18();
    
    // required bytes f19 = 19;
    boolean hasF19();
    com.google.protobuf.ByteString getF19();
    
    // optional bytes f20 = 20;
    boolean hasF20();
    com.google.protobuf.ByteString getF20();
  }
  public static final class TestFields extends
      com.google.protobuf.GeneratedMessage
      implements TestFieldsOrBuilder {
    // Use TestFields.newBuilder() to construct.
    private TestFields(Builder builder) {
      super(builder);
    }
    private TestFields(boolean noInit) {}
    
    private static final TestFields defaultInstance;
    public static TestFields getDefaultInstance() {
      return defaultInstance;
    }
    
    public TestFields getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_TestFields_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_TestFields_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 f01 = 1;
    public static final int F01_FIELD_NUMBER = 1;
    private int f01_;
    public boolean hasF01() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getF01() {
      return f01_;
    }
    
    // required sint32 f02 = 2;
    public static final int F02_FIELD_NUMBER = 2;
    private int f02_;
    public boolean hasF02() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getF02() {
      return f02_;
    }
    
    // required sfixed32 f03 = 3;
    public static final int F03_FIELD_NUMBER = 3;
    private int f03_;
    public boolean hasF03() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getF03() {
      return f03_;
    }
    
    // required uint32 f04 = 4;
    public static final int F04_FIELD_NUMBER = 4;
    private int f04_;
    public boolean hasF04() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getF04() {
      return f04_;
    }
    
    // required fixed32 f05 = 5;
    public static final int F05_FIELD_NUMBER = 5;
    private int f05_;
    public boolean hasF05() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getF05() {
      return f05_;
    }
    
    // required int64 f06 = 6;
    public static final int F06_FIELD_NUMBER = 6;
    private long f06_;
    public boolean hasF06() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public long getF06() {
      return f06_;
    }
    
    // required sint64 f07 = 7;
    public static final int F07_FIELD_NUMBER = 7;
    private long f07_;
    public boolean hasF07() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public long getF07() {
      return f07_;
    }
    
    // required sfixed64 f08 = 8;
    public static final int F08_FIELD_NUMBER = 8;
    private long f08_;
    public boolean hasF08() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public long getF08() {
      return f08_;
    }
    
    // required uint64 f09 = 9;
    public static final int F09_FIELD_NUMBER = 9;
    private long f09_;
    public boolean hasF09() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public long getF09() {
      return f09_;
    }
    
    // required fixed64 f10 = 10;
    public static final int F10_FIELD_NUMBER = 10;
    private long f10_;
    public boolean hasF10() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public long getF10() {
      return f10_;
    }
    
    // required float f11 = 11;
    public static final int F11_FIELD_NUMBER = 11;
    private float f11_;
    public boolean hasF11() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public float getF11() {
      return f11_;
    }
    
    // required double f12 = 12;
    public static final int F12_FIELD_NUMBER = 12;
    private double f12_;
    public boolean hasF12() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public double getF12() {
      return f12_;
    }
    
    // required bool f13 = 13;
    public static final int F13_FIELD_NUMBER = 13;
    private boolean f13_;
    public boolean hasF13() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public boolean getF13() {
      return f13_;
    }
    
    // optional bool f14 = 14;
    public static final int F14_FIELD_NUMBER = 14;
    private boolean f14_;
    public boolean hasF14() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public boolean getF14() {
      return f14_;
    }
    
    // required string f15 = 15;
    public static final int F15_FIELD_NUMBER = 15;
    private java.lang.Object f15_;
    public boolean hasF15() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public String getF15() {
      java.lang.Object ref = f15_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          f15_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getF15Bytes() {
      java.lang.Object ref = f15_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        f15_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string f16 = 16;
    public static final int F16_FIELD_NUMBER = 16;
    private java.lang.Object f16_;
    public boolean hasF16() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public String getF16() {
      java.lang.Object ref = f16_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          f16_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getF16Bytes() {
      java.lang.Object ref = f16_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        f16_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required .net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.SaleType f17 = 17;
    public static final int F17_FIELD_NUMBER = 17;
    private net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType f17_;
    public boolean hasF17() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType getF17() {
      return f17_;
    }
    
    // optional .net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.SaleType f18 = 18;
    public static final int F18_FIELD_NUMBER = 18;
    private net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType f18_;
    public boolean hasF18() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType getF18() {
      return f18_;
    }
    
    // required bytes f19 = 19;
    public static final int F19_FIELD_NUMBER = 19;
    private com.google.protobuf.ByteString f19_;
    public boolean hasF19() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    public com.google.protobuf.ByteString getF19() {
      return f19_;
    }
    
    // optional bytes f20 = 20;
    public static final int F20_FIELD_NUMBER = 20;
    private com.google.protobuf.ByteString f20_;
    public boolean hasF20() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    public com.google.protobuf.ByteString getF20() {
      return f20_;
    }
    
    private void initFields() {
      f01_ = 0;
      f02_ = 0;
      f03_ = 0;
      f04_ = 0;
      f05_ = 0;
      f06_ = 0L;
      f07_ = 0L;
      f08_ = 0L;
      f09_ = 0L;
      f10_ = 0L;
      f11_ = 0F;
      f12_ = 0D;
      f13_ = false;
      f14_ = false;
      f15_ = "";
      f16_ = "";
      f17_ = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType.RETURN;
      f18_ = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType.RETURN;
      f19_ = com.google.protobuf.ByteString.EMPTY;
      f20_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasF01()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF02()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF03()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF04()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF05()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF06()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF07()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF08()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF09()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF10()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF11()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF12()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF13()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF15()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF17()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF19()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, f01_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, f02_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSFixed32(3, f03_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, f04_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFixed32(5, f05_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, f06_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt64(7, f07_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeSFixed64(8, f08_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt64(9, f09_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFixed64(10, f10_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, f11_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeDouble(12, f12_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(13, f13_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBool(14, f14_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, getF15Bytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBytes(16, getF16Bytes());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeEnum(17, f17_.getNumber());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeEnum(18, f18_.getNumber());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBytes(19, f19_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeBytes(20, f20_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, f01_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, f02_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(3, f03_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, f04_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(5, f05_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, f06_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(7, f07_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(8, f08_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, f09_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(10, f10_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, f11_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, f12_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, f13_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, f14_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getF15Bytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(16, getF16Bytes());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(17, f17_.getNumber());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(18, f18_.getNumber());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(19, f19_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(20, f20_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFieldsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_TestFields_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_TestFields_fieldAccessorTable;
      }
      
      // Construct using net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        f01_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        f02_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        f03_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        f04_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        f05_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        f06_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        f07_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        f08_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        f09_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        f10_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        f11_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        f12_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000800);
        f13_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        f14_ = false;
        bitField0_ = (bitField0_ & ~0x00002000);
        f15_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        f16_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        f17_ = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType.RETURN;
        bitField0_ = (bitField0_ & ~0x00010000);
        f18_ = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType.RETURN;
        bitField0_ = (bitField0_ & ~0x00020000);
        f19_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00040000);
        f20_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields.getDescriptor();
      }
      
      public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields getDefaultInstanceForType() {
        return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields.getDefaultInstance();
      }
      
      public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields build() {
        net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields buildPartial() {
        net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields result = new net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.f01_ = f01_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.f02_ = f02_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.f03_ = f03_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.f04_ = f04_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.f05_ = f05_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.f06_ = f06_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.f07_ = f07_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.f08_ = f08_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.f09_ = f09_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.f10_ = f10_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.f11_ = f11_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.f12_ = f12_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.f13_ = f13_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.f14_ = f14_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.f15_ = f15_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.f16_ = f16_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.f17_ = f17_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.f18_ = f18_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.f19_ = f19_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.f20_ = f20_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields) {
          return mergeFrom((net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields other) {
        if (other == net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields.getDefaultInstance()) return this;
        if (other.hasF01()) {
          setF01(other.getF01());
        }
        if (other.hasF02()) {
          setF02(other.getF02());
        }
        if (other.hasF03()) {
          setF03(other.getF03());
        }
        if (other.hasF04()) {
          setF04(other.getF04());
        }
        if (other.hasF05()) {
          setF05(other.getF05());
        }
        if (other.hasF06()) {
          setF06(other.getF06());
        }
        if (other.hasF07()) {
          setF07(other.getF07());
        }
        if (other.hasF08()) {
          setF08(other.getF08());
        }
        if (other.hasF09()) {
          setF09(other.getF09());
        }
        if (other.hasF10()) {
          setF10(other.getF10());
        }
        if (other.hasF11()) {
          setF11(other.getF11());
        }
        if (other.hasF12()) {
          setF12(other.getF12());
        }
        if (other.hasF13()) {
          setF13(other.getF13());
        }
        if (other.hasF14()) {
          setF14(other.getF14());
        }
        if (other.hasF15()) {
          setF15(other.getF15());
        }
        if (other.hasF16()) {
          setF16(other.getF16());
        }
        if (other.hasF17()) {
          setF17(other.getF17());
        }
        if (other.hasF18()) {
          setF18(other.getF18());
        }
        if (other.hasF19()) {
          setF19(other.getF19());
        }
        if (other.hasF20()) {
          setF20(other.getF20());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasF01()) {
          
          return false;
        }
        if (!hasF02()) {
          
          return false;
        }
        if (!hasF03()) {
          
          return false;
        }
        if (!hasF04()) {
          
          return false;
        }
        if (!hasF05()) {
          
          return false;
        }
        if (!hasF06()) {
          
          return false;
        }
        if (!hasF07()) {
          
          return false;
        }
        if (!hasF08()) {
          
          return false;
        }
        if (!hasF09()) {
          
          return false;
        }
        if (!hasF10()) {
          
          return false;
        }
        if (!hasF11()) {
          
          return false;
        }
        if (!hasF12()) {
          
          return false;
        }
        if (!hasF13()) {
          
          return false;
        }
        if (!hasF15()) {
          
          return false;
        }
        if (!hasF17()) {
          
          return false;
        }
        if (!hasF19()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              f01_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              f02_ = input.readSInt32();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              f03_ = input.readSFixed32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              f04_ = input.readUInt32();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              f05_ = input.readFixed32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              f06_ = input.readInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              f07_ = input.readSInt64();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              f08_ = input.readSFixed64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              f09_ = input.readUInt64();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              f10_ = input.readFixed64();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              f11_ = input.readFloat();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              f12_ = input.readDouble();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              f13_ = input.readBool();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              f14_ = input.readBool();
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              f15_ = input.readBytes();
              break;
            }
            case 130: {
              bitField0_ |= 0x00008000;
              f16_ = input.readBytes();
              break;
            }
            case 136: {
              int rawValue = input.readEnum();
              net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType value = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(17, rawValue);
              } else {
                bitField0_ |= 0x00010000;
                f17_ = value;
              }
              break;
            }
            case 144: {
              int rawValue = input.readEnum();
              net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType value = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(18, rawValue);
              } else {
                bitField0_ |= 0x00020000;
                f18_ = value;
              }
              break;
            }
            case 154: {
              bitField0_ |= 0x00040000;
              f19_ = input.readBytes();
              break;
            }
            case 162: {
              bitField0_ |= 0x00080000;
              f20_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 f01 = 1;
      private int f01_ ;
      public boolean hasF01() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getF01() {
        return f01_;
      }
      public Builder setF01(int value) {
        bitField0_ |= 0x00000001;
        f01_ = value;
        onChanged();
        return this;
      }
      public Builder clearF01() {
        bitField0_ = (bitField0_ & ~0x00000001);
        f01_ = 0;
        onChanged();
        return this;
      }
      
      // required sint32 f02 = 2;
      private int f02_ ;
      public boolean hasF02() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getF02() {
        return f02_;
      }
      public Builder setF02(int value) {
        bitField0_ |= 0x00000002;
        f02_ = value;
        onChanged();
        return this;
      }
      public Builder clearF02() {
        bitField0_ = (bitField0_ & ~0x00000002);
        f02_ = 0;
        onChanged();
        return this;
      }
      
      // required sfixed32 f03 = 3;
      private int f03_ ;
      public boolean hasF03() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getF03() {
        return f03_;
      }
      public Builder setF03(int value) {
        bitField0_ |= 0x00000004;
        f03_ = value;
        onChanged();
        return this;
      }
      public Builder clearF03() {
        bitField0_ = (bitField0_ & ~0x00000004);
        f03_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 f04 = 4;
      private int f04_ ;
      public boolean hasF04() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getF04() {
        return f04_;
      }
      public Builder setF04(int value) {
        bitField0_ |= 0x00000008;
        f04_ = value;
        onChanged();
        return this;
      }
      public Builder clearF04() {
        bitField0_ = (bitField0_ & ~0x00000008);
        f04_ = 0;
        onChanged();
        return this;
      }
      
      // required fixed32 f05 = 5;
      private int f05_ ;
      public boolean hasF05() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getF05() {
        return f05_;
      }
      public Builder setF05(int value) {
        bitField0_ |= 0x00000010;
        f05_ = value;
        onChanged();
        return this;
      }
      public Builder clearF05() {
        bitField0_ = (bitField0_ & ~0x00000010);
        f05_ = 0;
        onChanged();
        return this;
      }
      
      // required int64 f06 = 6;
      private long f06_ ;
      public boolean hasF06() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public long getF06() {
        return f06_;
      }
      public Builder setF06(long value) {
        bitField0_ |= 0x00000020;
        f06_ = value;
        onChanged();
        return this;
      }
      public Builder clearF06() {
        bitField0_ = (bitField0_ & ~0x00000020);
        f06_ = 0L;
        onChanged();
        return this;
      }
      
      // required sint64 f07 = 7;
      private long f07_ ;
      public boolean hasF07() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public long getF07() {
        return f07_;
      }
      public Builder setF07(long value) {
        bitField0_ |= 0x00000040;
        f07_ = value;
        onChanged();
        return this;
      }
      public Builder clearF07() {
        bitField0_ = (bitField0_ & ~0x00000040);
        f07_ = 0L;
        onChanged();
        return this;
      }
      
      // required sfixed64 f08 = 8;
      private long f08_ ;
      public boolean hasF08() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public long getF08() {
        return f08_;
      }
      public Builder setF08(long value) {
        bitField0_ |= 0x00000080;
        f08_ = value;
        onChanged();
        return this;
      }
      public Builder clearF08() {
        bitField0_ = (bitField0_ & ~0x00000080);
        f08_ = 0L;
        onChanged();
        return this;
      }
      
      // required uint64 f09 = 9;
      private long f09_ ;
      public boolean hasF09() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public long getF09() {
        return f09_;
      }
      public Builder setF09(long value) {
        bitField0_ |= 0x00000100;
        f09_ = value;
        onChanged();
        return this;
      }
      public Builder clearF09() {
        bitField0_ = (bitField0_ & ~0x00000100);
        f09_ = 0L;
        onChanged();
        return this;
      }
      
      // required fixed64 f10 = 10;
      private long f10_ ;
      public boolean hasF10() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public long getF10() {
        return f10_;
      }
      public Builder setF10(long value) {
        bitField0_ |= 0x00000200;
        f10_ = value;
        onChanged();
        return this;
      }
      public Builder clearF10() {
        bitField0_ = (bitField0_ & ~0x00000200);
        f10_ = 0L;
        onChanged();
        return this;
      }
      
      // required float f11 = 11;
      private float f11_ ;
      public boolean hasF11() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public float getF11() {
        return f11_;
      }
      public Builder setF11(float value) {
        bitField0_ |= 0x00000400;
        f11_ = value;
        onChanged();
        return this;
      }
      public Builder clearF11() {
        bitField0_ = (bitField0_ & ~0x00000400);
        f11_ = 0F;
        onChanged();
        return this;
      }
      
      // required double f12 = 12;
      private double f12_ ;
      public boolean hasF12() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public double getF12() {
        return f12_;
      }
      public Builder setF12(double value) {
        bitField0_ |= 0x00000800;
        f12_ = value;
        onChanged();
        return this;
      }
      public Builder clearF12() {
        bitField0_ = (bitField0_ & ~0x00000800);
        f12_ = 0D;
        onChanged();
        return this;
      }
      
      // required bool f13 = 13;
      private boolean f13_ ;
      public boolean hasF13() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public boolean getF13() {
        return f13_;
      }
      public Builder setF13(boolean value) {
        bitField0_ |= 0x00001000;
        f13_ = value;
        onChanged();
        return this;
      }
      public Builder clearF13() {
        bitField0_ = (bitField0_ & ~0x00001000);
        f13_ = false;
        onChanged();
        return this;
      }
      
      // optional bool f14 = 14;
      private boolean f14_ ;
      public boolean hasF14() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public boolean getF14() {
        return f14_;
      }
      public Builder setF14(boolean value) {
        bitField0_ |= 0x00002000;
        f14_ = value;
        onChanged();
        return this;
      }
      public Builder clearF14() {
        bitField0_ = (bitField0_ & ~0x00002000);
        f14_ = false;
        onChanged();
        return this;
      }
      
      // required string f15 = 15;
      private java.lang.Object f15_ = "";
      public boolean hasF15() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public String getF15() {
        java.lang.Object ref = f15_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          f15_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setF15(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        f15_ = value;
        onChanged();
        return this;
      }
      public Builder clearF15() {
        bitField0_ = (bitField0_ & ~0x00004000);
        f15_ = getDefaultInstance().getF15();
        onChanged();
        return this;
      }
      void setF15(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00004000;
        f15_ = value;
        onChanged();
      }
      
      // optional string f16 = 16;
      private java.lang.Object f16_ = "";
      public boolean hasF16() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public String getF16() {
        java.lang.Object ref = f16_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          f16_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setF16(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        f16_ = value;
        onChanged();
        return this;
      }
      public Builder clearF16() {
        bitField0_ = (bitField0_ & ~0x00008000);
        f16_ = getDefaultInstance().getF16();
        onChanged();
        return this;
      }
      void setF16(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00008000;
        f16_ = value;
        onChanged();
      }
      
      // required .net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.SaleType f17 = 17;
      private net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType f17_ = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType.RETURN;
      public boolean hasF17() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType getF17() {
        return f17_;
      }
      public Builder setF17(net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00010000;
        f17_ = value;
        onChanged();
        return this;
      }
      public Builder clearF17() {
        bitField0_ = (bitField0_ & ~0x00010000);
        f17_ = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType.RETURN;
        onChanged();
        return this;
      }
      
      // optional .net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.SaleType f18 = 18;
      private net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType f18_ = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType.RETURN;
      public boolean hasF18() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType getF18() {
        return f18_;
      }
      public Builder setF18(net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00020000;
        f18_ = value;
        onChanged();
        return this;
      }
      public Builder clearF18() {
        bitField0_ = (bitField0_ & ~0x00020000);
        f18_ = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.SaleType.RETURN;
        onChanged();
        return this;
      }
      
      // required bytes f19 = 19;
      private com.google.protobuf.ByteString f19_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasF19() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      public com.google.protobuf.ByteString getF19() {
        return f19_;
      }
      public Builder setF19(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        f19_ = value;
        onChanged();
        return this;
      }
      public Builder clearF19() {
        bitField0_ = (bitField0_ & ~0x00040000);
        f19_ = getDefaultInstance().getF19();
        onChanged();
        return this;
      }
      
      // optional bytes f20 = 20;
      private com.google.protobuf.ByteString f20_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasF20() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      public com.google.protobuf.ByteString getF20() {
        return f20_;
      }
      public Builder setF20(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00080000;
        f20_ = value;
        onChanged();
        return this;
      }
      public Builder clearF20() {
        bitField0_ = (bitField0_ & ~0x00080000);
        f20_ = getDefaultInstance().getF20();
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.TestFields)
    }
    
    static {
      defaultInstance = new TestFields(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.TestFields)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_TestFields_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_TestFields_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017FieldTest.proto\022+net.sf.RecordEditor.P" +
      "rotoBuf.re.Test.SalesX\"\376\002\n\nTestFields\022\013\n" +
      "\003f01\030\001 \002(\005\022\013\n\003f02\030\002 \002(\021\022\013\n\003f03\030\003 \002(\017\022\013\n\003" +
      "f04\030\004 \002(\r\022\013\n\003f05\030\005 \002(\007\022\013\n\003f06\030\006 \002(\003\022\013\n\003f" +
      "07\030\007 \002(\022\022\013\n\003f08\030\010 \002(\020\022\013\n\003f09\030\t \002(\004\022\013\n\003f1" +
      "0\030\n \002(\006\022\013\n\003f11\030\013 \002(\002\022\013\n\003f12\030\014 \002(\001\022\013\n\003f13" +
      "\030\r \002(\010\022\013\n\003f14\030\016 \001(\010\022\013\n\003f15\030\017 \002(\t\022\013\n\003f16\030" +
      "\020 \001(\t\022B\n\003f17\030\021 \002(\01625.net.sf.RecordEditor" +
      ".ProtoBuf.re.Test.SalesX.SaleType\022B\n\003f18" +
      "\030\022 \001(\01625.net.sf.RecordEditor.ProtoBuf.re",
      ".Test.SalesX.SaleType\022\013\n\003f19\030\023 \002(\014\022\013\n\003f2" +
      "0\030\024 \001(\014*4\n\010SaleType\022\023\n\006RETURN\020\377\377\377\377\377\377\377\377\377\001" +
      "\022\t\n\005OTHER\020\000\022\010\n\004SALE\020\001B\002H\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_TestFields_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_TestFields_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_TestFields_descriptor,
              new java.lang.String[] { "F01", "F02", "F03", "F04", "F05", "F06", "F07", "F08", "F09", "F10", "F11", "F12", "F13", "F14", "F15", "F16", "F17", "F18", "F19", "F20", },
              net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields.class,
              net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.FieldTest.TestFields.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
