// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Sales11.proto

package net.sf.RecordEditor.ProtoBuf.re.Test.SalesX;

public final class Sales11 {
  private Sales11() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum SaleType
      implements com.google.protobuf.ProtocolMessageEnum {
    RETURN(0, -1),
    OTHER(1, 0),
    SALE(2, 1),
    ;
    
    public static final int RETURN_VALUE = -1;
    public static final int OTHER_VALUE = 0;
    public static final int SALE_VALUE = 1;
    
    
    public final int getNumber() { return value; }
    
    public static SaleType valueOf(int value) {
      switch (value) {
        case -1: return RETURN;
        case 0: return OTHER;
        case 1: return SALE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<SaleType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SaleType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SaleType>() {
            public SaleType findValueByNumber(int number) {
              return SaleType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final SaleType[] VALUES = {
      RETURN, OTHER, SALE, 
    };
    
    public static SaleType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private SaleType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.SaleType)
  }
  
  public enum PaymentType
      implements com.google.protobuf.ProtocolMessageEnum {
    CASH(0, 1),
    CREDIT_CARD(1, 2),
    DEBIT_CARD(2, 3),
    CHEQUE(3, 4),
    ;
    
    public static final int CASH_VALUE = 1;
    public static final int CREDIT_CARD_VALUE = 2;
    public static final int DEBIT_CARD_VALUE = 3;
    public static final int CHEQUE_VALUE = 4;
    
    
    public final int getNumber() { return value; }
    
    public static PaymentType valueOf(int value) {
      switch (value) {
        case 1: return CASH;
        case 2: return CREDIT_CARD;
        case 3: return DEBIT_CARD;
        case 4: return CHEQUE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<PaymentType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PaymentType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PaymentType>() {
            public PaymentType findValueByNumber(int number) {
              return PaymentType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.getDescriptor().getEnumTypes().get(1);
    }
    
    private static final PaymentType[] VALUES = {
      CASH, CREDIT_CARD, DEBIT_CARD, CHEQUE, 
    };
    
    public static PaymentType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private PaymentType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.PaymentType)
  }
  
  public interface sale11OrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 keycode = 1;
    boolean hasKeycode();
    int getKeycode();
    
    // required int32 store = 2;
    boolean hasStore();
    int getStore();
    
    // optional int32 department = 3;
    boolean hasDepartment();
    int getDepartment();
    
    // optional int32 saleDate = 4;
    boolean hasSaleDate();
    int getSaleDate();
    
    // optional int32 quantity = 5;
    boolean hasQuantity();
    int getQuantity();
    
    // optional int64 price = 6;
    boolean hasPrice();
    long getPrice();
    
    // optional float priceFloat = 7;
    boolean hasPriceFloat();
    float getPriceFloat();
    
    // optional double priceDouble = 8;
    boolean hasPriceDouble();
    double getPriceDouble();
    
    // required .net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.SaleType saleType = 10;
    boolean hasSaleType();
    net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.SaleType getSaleType();
    
    // optional .net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.PaymentType paymentType = 11;
    boolean hasPaymentType();
    net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.PaymentType getPaymentType();
    
    // repeated string strArray = 21;
    java.util.List<String> getStrArrayList();
    int getStrArrayCount();
    String getStrArray(int index);
  }
  public static final class sale11 extends
      com.google.protobuf.GeneratedMessage
      implements sale11OrBuilder {
    // Use sale11.newBuilder() to construct.
    private sale11(Builder builder) {
      super(builder);
    }
    private sale11(boolean noInit) {}
    
    private static final sale11 defaultInstance;
    public static sale11 getDefaultInstance() {
      return defaultInstance;
    }
    
    public sale11 getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_sale11_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_sale11_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 keycode = 1;
    public static final int KEYCODE_FIELD_NUMBER = 1;
    private int keycode_;
    public boolean hasKeycode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getKeycode() {
      return keycode_;
    }
    
    // required int32 store = 2;
    public static final int STORE_FIELD_NUMBER = 2;
    private int store_;
    public boolean hasStore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getStore() {
      return store_;
    }
    
    // optional int32 department = 3;
    public static final int DEPARTMENT_FIELD_NUMBER = 3;
    private int department_;
    public boolean hasDepartment() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getDepartment() {
      return department_;
    }
    
    // optional int32 saleDate = 4;
    public static final int SALEDATE_FIELD_NUMBER = 4;
    private int saleDate_;
    public boolean hasSaleDate() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getSaleDate() {
      return saleDate_;
    }
    
    // optional int32 quantity = 5;
    public static final int QUANTITY_FIELD_NUMBER = 5;
    private int quantity_;
    public boolean hasQuantity() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getQuantity() {
      return quantity_;
    }
    
    // optional int64 price = 6;
    public static final int PRICE_FIELD_NUMBER = 6;
    private long price_;
    public boolean hasPrice() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public long getPrice() {
      return price_;
    }
    
    // optional float priceFloat = 7;
    public static final int PRICEFLOAT_FIELD_NUMBER = 7;
    private float priceFloat_;
    public boolean hasPriceFloat() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public float getPriceFloat() {
      return priceFloat_;
    }
    
    // optional double priceDouble = 8;
    public static final int PRICEDOUBLE_FIELD_NUMBER = 8;
    private double priceDouble_;
    public boolean hasPriceDouble() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public double getPriceDouble() {
      return priceDouble_;
    }
    
    // required .net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.SaleType saleType = 10;
    public static final int SALETYPE_FIELD_NUMBER = 10;
    private net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.SaleType saleType_;
    public boolean hasSaleType() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.SaleType getSaleType() {
      return saleType_;
    }
    
    // optional .net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.PaymentType paymentType = 11;
    public static final int PAYMENTTYPE_FIELD_NUMBER = 11;
    private net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.PaymentType paymentType_;
    public boolean hasPaymentType() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.PaymentType getPaymentType() {
      return paymentType_;
    }
    
    // repeated string strArray = 21;
    public static final int STRARRAY_FIELD_NUMBER = 21;
    private com.google.protobuf.LazyStringList strArray_;
    public java.util.List<String>
        getStrArrayList() {
      return strArray_;
    }
    public int getStrArrayCount() {
      return strArray_.size();
    }
    public String getStrArray(int index) {
      return strArray_.get(index);
    }
    
    private void initFields() {
      keycode_ = 0;
      store_ = 0;
      department_ = 0;
      saleDate_ = 0;
      quantity_ = 0;
      price_ = 0L;
      priceFloat_ = 0F;
      priceDouble_ = 0D;
      saleType_ = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.SaleType.RETURN;
      paymentType_ = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.PaymentType.CASH;
      strArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasKeycode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStore()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSaleType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keycode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, store_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, department_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, saleDate_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, quantity_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, price_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, priceFloat_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, priceDouble_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeEnum(10, saleType_.getNumber());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeEnum(11, paymentType_.getNumber());
      }
      for (int i = 0; i < strArray_.size(); i++) {
        output.writeBytes(21, strArray_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keycode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, store_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, department_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, saleDate_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, quantity_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, price_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, priceFloat_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, priceDouble_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, saleType_.getNumber());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, paymentType_.getNumber());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < strArray_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(strArray_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getStrArrayList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_sale11_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_sale11_fieldAccessorTable;
      }
      
      // Construct using net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        keycode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        store_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        department_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        saleDate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        quantity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        price_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        priceFloat_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        priceDouble_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        saleType_ = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.SaleType.RETURN;
        bitField0_ = (bitField0_ & ~0x00000100);
        paymentType_ = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.PaymentType.CASH;
        bitField0_ = (bitField0_ & ~0x00000200);
        strArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11.getDescriptor();
      }
      
      public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11 getDefaultInstanceForType() {
        return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11.getDefaultInstance();
      }
      
      public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11 build() {
        net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11 buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11 buildPartial() {
        net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11 result = new net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keycode_ = keycode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.store_ = store_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.department_ = department_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.saleDate_ = saleDate_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.quantity_ = quantity_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.price_ = price_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.priceFloat_ = priceFloat_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.priceDouble_ = priceDouble_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.saleType_ = saleType_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.paymentType_ = paymentType_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          strArray_ = new com.google.protobuf.UnmodifiableLazyStringList(
              strArray_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.strArray_ = strArray_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11) {
          return mergeFrom((net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11 other) {
        if (other == net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11.getDefaultInstance()) return this;
        if (other.hasKeycode()) {
          setKeycode(other.getKeycode());
        }
        if (other.hasStore()) {
          setStore(other.getStore());
        }
        if (other.hasDepartment()) {
          setDepartment(other.getDepartment());
        }
        if (other.hasSaleDate()) {
          setSaleDate(other.getSaleDate());
        }
        if (other.hasQuantity()) {
          setQuantity(other.getQuantity());
        }
        if (other.hasPrice()) {
          setPrice(other.getPrice());
        }
        if (other.hasPriceFloat()) {
          setPriceFloat(other.getPriceFloat());
        }
        if (other.hasPriceDouble()) {
          setPriceDouble(other.getPriceDouble());
        }
        if (other.hasSaleType()) {
          setSaleType(other.getSaleType());
        }
        if (other.hasPaymentType()) {
          setPaymentType(other.getPaymentType());
        }
        if (!other.strArray_.isEmpty()) {
          if (strArray_.isEmpty()) {
            strArray_ = other.strArray_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureStrArrayIsMutable();
            strArray_.addAll(other.strArray_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasKeycode()) {
          
          return false;
        }
        if (!hasStore()) {
          
          return false;
        }
        if (!hasSaleType()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keycode_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              store_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              department_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              saleDate_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              quantity_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              price_ = input.readInt64();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              priceFloat_ = input.readFloat();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              priceDouble_ = input.readDouble();
              break;
            }
            case 80: {
              int rawValue = input.readEnum();
              net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.SaleType value = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.SaleType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(10, rawValue);
              } else {
                bitField0_ |= 0x00000100;
                saleType_ = value;
              }
              break;
            }
            case 88: {
              int rawValue = input.readEnum();
              net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.PaymentType value = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.PaymentType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(11, rawValue);
              } else {
                bitField0_ |= 0x00000200;
                paymentType_ = value;
              }
              break;
            }
            case 170: {
              ensureStrArrayIsMutable();
              strArray_.add(input.readBytes());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 keycode = 1;
      private int keycode_ ;
      public boolean hasKeycode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getKeycode() {
        return keycode_;
      }
      public Builder setKeycode(int value) {
        bitField0_ |= 0x00000001;
        keycode_ = value;
        onChanged();
        return this;
      }
      public Builder clearKeycode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keycode_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 store = 2;
      private int store_ ;
      public boolean hasStore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getStore() {
        return store_;
      }
      public Builder setStore(int value) {
        bitField0_ |= 0x00000002;
        store_ = value;
        onChanged();
        return this;
      }
      public Builder clearStore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        store_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 department = 3;
      private int department_ ;
      public boolean hasDepartment() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getDepartment() {
        return department_;
      }
      public Builder setDepartment(int value) {
        bitField0_ |= 0x00000004;
        department_ = value;
        onChanged();
        return this;
      }
      public Builder clearDepartment() {
        bitField0_ = (bitField0_ & ~0x00000004);
        department_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 saleDate = 4;
      private int saleDate_ ;
      public boolean hasSaleDate() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getSaleDate() {
        return saleDate_;
      }
      public Builder setSaleDate(int value) {
        bitField0_ |= 0x00000008;
        saleDate_ = value;
        onChanged();
        return this;
      }
      public Builder clearSaleDate() {
        bitField0_ = (bitField0_ & ~0x00000008);
        saleDate_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 quantity = 5;
      private int quantity_ ;
      public boolean hasQuantity() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getQuantity() {
        return quantity_;
      }
      public Builder setQuantity(int value) {
        bitField0_ |= 0x00000010;
        quantity_ = value;
        onChanged();
        return this;
      }
      public Builder clearQuantity() {
        bitField0_ = (bitField0_ & ~0x00000010);
        quantity_ = 0;
        onChanged();
        return this;
      }
      
      // optional int64 price = 6;
      private long price_ ;
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public long getPrice() {
        return price_;
      }
      public Builder setPrice(long value) {
        bitField0_ |= 0x00000020;
        price_ = value;
        onChanged();
        return this;
      }
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00000020);
        price_ = 0L;
        onChanged();
        return this;
      }
      
      // optional float priceFloat = 7;
      private float priceFloat_ ;
      public boolean hasPriceFloat() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public float getPriceFloat() {
        return priceFloat_;
      }
      public Builder setPriceFloat(float value) {
        bitField0_ |= 0x00000040;
        priceFloat_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceFloat() {
        bitField0_ = (bitField0_ & ~0x00000040);
        priceFloat_ = 0F;
        onChanged();
        return this;
      }
      
      // optional double priceDouble = 8;
      private double priceDouble_ ;
      public boolean hasPriceDouble() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public double getPriceDouble() {
        return priceDouble_;
      }
      public Builder setPriceDouble(double value) {
        bitField0_ |= 0x00000080;
        priceDouble_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriceDouble() {
        bitField0_ = (bitField0_ & ~0x00000080);
        priceDouble_ = 0D;
        onChanged();
        return this;
      }
      
      // required .net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.SaleType saleType = 10;
      private net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.SaleType saleType_ = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.SaleType.RETURN;
      public boolean hasSaleType() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.SaleType getSaleType() {
        return saleType_;
      }
      public Builder setSaleType(net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.SaleType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        saleType_ = value;
        onChanged();
        return this;
      }
      public Builder clearSaleType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        saleType_ = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.SaleType.RETURN;
        onChanged();
        return this;
      }
      
      // optional .net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.PaymentType paymentType = 11;
      private net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.PaymentType paymentType_ = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.PaymentType.CASH;
      public boolean hasPaymentType() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.PaymentType getPaymentType() {
        return paymentType_;
      }
      public Builder setPaymentType(net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.PaymentType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        paymentType_ = value;
        onChanged();
        return this;
      }
      public Builder clearPaymentType() {
        bitField0_ = (bitField0_ & ~0x00000200);
        paymentType_ = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.PaymentType.CASH;
        onChanged();
        return this;
      }
      
      // repeated string strArray = 21;
      private com.google.protobuf.LazyStringList strArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStrArrayIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          strArray_ = new com.google.protobuf.LazyStringArrayList(strArray_);
          bitField0_ |= 0x00000400;
         }
      }
      public java.util.List<String>
          getStrArrayList() {
        return java.util.Collections.unmodifiableList(strArray_);
      }
      public int getStrArrayCount() {
        return strArray_.size();
      }
      public String getStrArray(int index) {
        return strArray_.get(index);
      }
      public Builder setStrArray(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrArrayIsMutable();
        strArray_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addStrArray(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrArrayIsMutable();
        strArray_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllStrArray(
          java.lang.Iterable<String> values) {
        ensureStrArrayIsMutable();
        super.addAll(values, strArray_);
        onChanged();
        return this;
      }
      public Builder clearStrArray() {
        strArray_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }
      void addStrArray(com.google.protobuf.ByteString value) {
        ensureStrArrayIsMutable();
        strArray_.add(value);
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.sale11)
    }
    
    static {
      defaultInstance = new sale11(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.sale11)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_sale11_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_sale11_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rSales11.proto\022+net.sf.RecordEditor.Pro" +
      "toBuf.re.Test.SalesX\"\302\002\n\006sale11\022\017\n\007keyco" +
      "de\030\001 \002(\005\022\r\n\005store\030\002 \002(\005\022\022\n\ndepartment\030\003 " +
      "\001(\005\022\020\n\010saleDate\030\004 \001(\005\022\020\n\010quantity\030\005 \001(\005\022" +
      "\r\n\005price\030\006 \001(\003\022\022\n\npriceFloat\030\007 \001(\002\022\023\n\013pr" +
      "iceDouble\030\010 \001(\001\022G\n\010saleType\030\n \002(\01625.net." +
      "sf.RecordEditor.ProtoBuf.re.Test.SalesX." +
      "SaleType\022M\n\013paymentType\030\013 \001(\01628.net.sf.R" +
      "ecordEditor.ProtoBuf.re.Test.SalesX.Paym" +
      "entType\022\020\n\010strArray\030\025 \003(\t*4\n\010SaleType\022\023\n",
      "\006RETURN\020\377\377\377\377\377\377\377\377\377\001\022\t\n\005OTHER\020\000\022\010\n\004SALE\020\001*" +
      "D\n\013PaymentType\022\010\n\004CASH\020\001\022\017\n\013CREDIT_CARD\020" +
      "\002\022\016\n\nDEBIT_CARD\020\003\022\n\n\006CHEQUE\020\004B\002H\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_sale11_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_sale11_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_sale11_descriptor,
              new java.lang.String[] { "Keycode", "Store", "Department", "SaleDate", "Quantity", "Price", "PriceFloat", "PriceDouble", "SaleType", "PaymentType", "StrArray", },
              net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11.class,
              net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Sales11.sale11.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
