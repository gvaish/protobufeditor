// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StoreSales5SD_Product.proto

package net.sf.RecordEditor.ProtoBuf.re.Test.SalesX;

public final class StoreSales5SDProduct {
  private StoreSales5SDProduct() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ProductOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 keycode = 1;
    boolean hasKeycode();
    int getKeycode();
    
    // repeated int32 saleDate = 2;
    java.util.List<java.lang.Integer> getSaleDateList();
    int getSaleDateCount();
    int getSaleDate(int index);
    
    // repeated int32 quantity = 3;
    java.util.List<java.lang.Integer> getQuantityList();
    int getQuantityCount();
    int getQuantity(int index);
    
    // repeated int64 price = 4;
    java.util.List<java.lang.Long> getPriceList();
    int getPriceCount();
    long getPrice(int index);
    
    // repeated .net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.SaleType saleType = 5;
    java.util.List<net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDEnum.SaleType> getSaleTypeList();
    int getSaleTypeCount();
    net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDEnum.SaleType getSaleType(int index);
  }
  public static final class Product extends
      com.google.protobuf.GeneratedMessage
      implements ProductOrBuilder {
    // Use Product.newBuilder() to construct.
    private Product(Builder builder) {
      super(builder);
    }
    private Product(boolean noInit) {}
    
    private static final Product defaultInstance;
    public static Product getDefaultInstance() {
      return defaultInstance;
    }
    
    public Product getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_Product_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_Product_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 keycode = 1;
    public static final int KEYCODE_FIELD_NUMBER = 1;
    private int keycode_;
    public boolean hasKeycode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getKeycode() {
      return keycode_;
    }
    
    // repeated int32 saleDate = 2;
    public static final int SALEDATE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> saleDate_;
    public java.util.List<java.lang.Integer>
        getSaleDateList() {
      return saleDate_;
    }
    public int getSaleDateCount() {
      return saleDate_.size();
    }
    public int getSaleDate(int index) {
      return saleDate_.get(index);
    }
    
    // repeated int32 quantity = 3;
    public static final int QUANTITY_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> quantity_;
    public java.util.List<java.lang.Integer>
        getQuantityList() {
      return quantity_;
    }
    public int getQuantityCount() {
      return quantity_.size();
    }
    public int getQuantity(int index) {
      return quantity_.get(index);
    }
    
    // repeated int64 price = 4;
    public static final int PRICE_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Long> price_;
    public java.util.List<java.lang.Long>
        getPriceList() {
      return price_;
    }
    public int getPriceCount() {
      return price_.size();
    }
    public long getPrice(int index) {
      return price_.get(index);
    }
    
    // repeated .net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.SaleType saleType = 5;
    public static final int SALETYPE_FIELD_NUMBER = 5;
    private java.util.List<net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDEnum.SaleType> saleType_;
    public java.util.List<net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDEnum.SaleType> getSaleTypeList() {
      return saleType_;
    }
    public int getSaleTypeCount() {
      return saleType_.size();
    }
    public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDEnum.SaleType getSaleType(int index) {
      return saleType_.get(index);
    }
    
    private void initFields() {
      keycode_ = 0;
      saleDate_ = java.util.Collections.emptyList();;
      quantity_ = java.util.Collections.emptyList();;
      price_ = java.util.Collections.emptyList();;
      saleType_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasKeycode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, keycode_);
      }
      for (int i = 0; i < saleDate_.size(); i++) {
        output.writeInt32(2, saleDate_.get(i));
      }
      for (int i = 0; i < quantity_.size(); i++) {
        output.writeInt32(3, quantity_.get(i));
      }
      for (int i = 0; i < price_.size(); i++) {
        output.writeInt64(4, price_.get(i));
      }
      for (int i = 0; i < saleType_.size(); i++) {
        output.writeEnum(5, saleType_.get(i).getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keycode_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < saleDate_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(saleDate_.get(i));
        }
        size += dataSize;
        size += 1 * getSaleDateList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < quantity_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(quantity_.get(i));
        }
        size += dataSize;
        size += 1 * getQuantityList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < price_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(price_.get(i));
        }
        size += dataSize;
        size += 1 * getPriceList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < saleType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(saleType_.get(i).getNumber());
        }
        size += dataSize;
        size += 1 * saleType_.size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.ProductOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_Product_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_Product_fieldAccessorTable;
      }
      
      // Construct using net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        keycode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        saleDate_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        quantity_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        price_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        saleType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product.getDescriptor();
      }
      
      public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product getDefaultInstanceForType() {
        return net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product.getDefaultInstance();
      }
      
      public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product build() {
        net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product buildPartial() {
        net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product result = new net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keycode_ = keycode_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          saleDate_ = java.util.Collections.unmodifiableList(saleDate_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.saleDate_ = saleDate_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          quantity_ = java.util.Collections.unmodifiableList(quantity_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.quantity_ = quantity_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          price_ = java.util.Collections.unmodifiableList(price_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.price_ = price_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          saleType_ = java.util.Collections.unmodifiableList(saleType_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.saleType_ = saleType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product) {
          return mergeFrom((net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product other) {
        if (other == net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product.getDefaultInstance()) return this;
        if (other.hasKeycode()) {
          setKeycode(other.getKeycode());
        }
        if (!other.saleDate_.isEmpty()) {
          if (saleDate_.isEmpty()) {
            saleDate_ = other.saleDate_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSaleDateIsMutable();
            saleDate_.addAll(other.saleDate_);
          }
          onChanged();
        }
        if (!other.quantity_.isEmpty()) {
          if (quantity_.isEmpty()) {
            quantity_ = other.quantity_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureQuantityIsMutable();
            quantity_.addAll(other.quantity_);
          }
          onChanged();
        }
        if (!other.price_.isEmpty()) {
          if (price_.isEmpty()) {
            price_ = other.price_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensurePriceIsMutable();
            price_.addAll(other.price_);
          }
          onChanged();
        }
        if (!other.saleType_.isEmpty()) {
          if (saleType_.isEmpty()) {
            saleType_ = other.saleType_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureSaleTypeIsMutable();
            saleType_.addAll(other.saleType_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasKeycode()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keycode_ = input.readInt32();
              break;
            }
            case 16: {
              ensureSaleDateIsMutable();
              saleDate_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSaleDate(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              ensureQuantityIsMutable();
              quantity_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addQuantity(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              ensurePriceIsMutable();
              price_.add(input.readInt64());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPrice(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDEnum.SaleType value = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDEnum.SaleType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                addSaleType(value);
              }
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDEnum.SaleType value = net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDEnum.SaleType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(5, rawValue);
                } else {
                  addSaleType(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 keycode = 1;
      private int keycode_ ;
      public boolean hasKeycode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getKeycode() {
        return keycode_;
      }
      public Builder setKeycode(int value) {
        bitField0_ |= 0x00000001;
        keycode_ = value;
        onChanged();
        return this;
      }
      public Builder clearKeycode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keycode_ = 0;
        onChanged();
        return this;
      }
      
      // repeated int32 saleDate = 2;
      private java.util.List<java.lang.Integer> saleDate_ = java.util.Collections.emptyList();;
      private void ensureSaleDateIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          saleDate_ = new java.util.ArrayList<java.lang.Integer>(saleDate_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<java.lang.Integer>
          getSaleDateList() {
        return java.util.Collections.unmodifiableList(saleDate_);
      }
      public int getSaleDateCount() {
        return saleDate_.size();
      }
      public int getSaleDate(int index) {
        return saleDate_.get(index);
      }
      public Builder setSaleDate(
          int index, int value) {
        ensureSaleDateIsMutable();
        saleDate_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addSaleDate(int value) {
        ensureSaleDateIsMutable();
        saleDate_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllSaleDate(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSaleDateIsMutable();
        super.addAll(values, saleDate_);
        onChanged();
        return this;
      }
      public Builder clearSaleDate() {
        saleDate_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      
      // repeated int32 quantity = 3;
      private java.util.List<java.lang.Integer> quantity_ = java.util.Collections.emptyList();;
      private void ensureQuantityIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          quantity_ = new java.util.ArrayList<java.lang.Integer>(quantity_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Integer>
          getQuantityList() {
        return java.util.Collections.unmodifiableList(quantity_);
      }
      public int getQuantityCount() {
        return quantity_.size();
      }
      public int getQuantity(int index) {
        return quantity_.get(index);
      }
      public Builder setQuantity(
          int index, int value) {
        ensureQuantityIsMutable();
        quantity_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addQuantity(int value) {
        ensureQuantityIsMutable();
        quantity_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllQuantity(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureQuantityIsMutable();
        super.addAll(values, quantity_);
        onChanged();
        return this;
      }
      public Builder clearQuantity() {
        quantity_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // repeated int64 price = 4;
      private java.util.List<java.lang.Long> price_ = java.util.Collections.emptyList();;
      private void ensurePriceIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          price_ = new java.util.ArrayList<java.lang.Long>(price_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<java.lang.Long>
          getPriceList() {
        return java.util.Collections.unmodifiableList(price_);
      }
      public int getPriceCount() {
        return price_.size();
      }
      public long getPrice(int index) {
        return price_.get(index);
      }
      public Builder setPrice(
          int index, long value) {
        ensurePriceIsMutable();
        price_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addPrice(long value) {
        ensurePriceIsMutable();
        price_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllPrice(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensurePriceIsMutable();
        super.addAll(values, price_);
        onChanged();
        return this;
      }
      public Builder clearPrice() {
        price_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      
      // repeated .net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.SaleType saleType = 5;
      private java.util.List<net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDEnum.SaleType> saleType_ =
        java.util.Collections.emptyList();
      private void ensureSaleTypeIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          saleType_ = new java.util.ArrayList<net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDEnum.SaleType>(saleType_);
          bitField0_ |= 0x00000010;
        }
      }
      public java.util.List<net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDEnum.SaleType> getSaleTypeList() {
        return java.util.Collections.unmodifiableList(saleType_);
      }
      public int getSaleTypeCount() {
        return saleType_.size();
      }
      public net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDEnum.SaleType getSaleType(int index) {
        return saleType_.get(index);
      }
      public Builder setSaleType(
          int index, net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDEnum.SaleType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSaleTypeIsMutable();
        saleType_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addSaleType(net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDEnum.SaleType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSaleTypeIsMutable();
        saleType_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllSaleType(
          java.lang.Iterable<? extends net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDEnum.SaleType> values) {
        ensureSaleTypeIsMutable();
        super.addAll(values, saleType_);
        onChanged();
        return this;
      }
      public Builder clearSaleType() {
        saleType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Product)
    }
    
    static {
      defaultInstance = new Product(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.Product)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_Product_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_Product_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033StoreSales5SD_Product.proto\022+net.sf.Re" +
      "cordEditor.ProtoBuf.re.Test.SalesX\032\030Stor" +
      "eSales5SD_Enum.proto\"\226\001\n\007Product\022\017\n\007keyc" +
      "ode\030\001 \002(\005\022\020\n\010saleDate\030\002 \003(\005\022\020\n\010quantity\030" +
      "\003 \003(\005\022\r\n\005price\030\004 \003(\003\022G\n\010saleType\030\005 \003(\01625" +
      ".net.sf.RecordEditor.ProtoBuf.re.Test.Sa" +
      "lesX.SaleTypeB\002H\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_Product_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_Product_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_sf_RecordEditor_ProtoBuf_re_Test_SalesX_Product_descriptor,
              new java.lang.String[] { "Keycode", "SaleDate", "Quantity", "Price", "SaleType", },
              net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product.class,
              net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDProduct.Product.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          net.sf.RecordEditor.ProtoBuf.re.Test.SalesX.StoreSales5SDEnum.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
